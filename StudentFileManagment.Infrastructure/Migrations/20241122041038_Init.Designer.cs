// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentFileManagement.Infrastructure;

#nullable disable

namespace StudentFileManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241122041038_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51389c89-8dd3-4122-9859-97dbae9a22b2"),
                            Name = "СПО"
                        },
                        new
                        {
                            Id = new Guid("044cebd7-281b-4125-9122-8f8b008d519d"),
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = new Guid("fc38c983-80f2-4f8e-8549-03a129618d20"),
                            Name = "Магистратура"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionAndEducationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionAndEducationId");

                    b.ToTable("EducationDirections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("251ce3e0-c57b-4366-88b2-e2f59c78bcff"),
                            InstitutionAndEducationId = new Guid("b7dddae3-33e4-4b21-bf17-ca1671e7e197"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("0c158744-3d02-4b84-b384-d0e90532dce8"),
                            InstitutionAndEducationId = new Guid("c389974a-d01b-4654-8140-271b5faada06"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("276cf8e0-9076-4557-b094-d6eb21ffe69e"),
                            InstitutionAndEducationId = new Guid("260b4008-3ec5-4595-ac9d-28cdc5edbd43"),
                            Name = "Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LectureDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectureDataId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a14c2809-777d-4423-a1dd-0028f68065c0"),
                            Name = "ВГЛТУ"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionAndEducations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7dddae3-33e4-4b21-bf17-ca1671e7e197"),
                            EducationId = new Guid("51389c89-8dd3-4122-9859-97dbae9a22b2"),
                            InstitutionId = new Guid("a14c2809-777d-4423-a1dd-0028f68065c0")
                        },
                        new
                        {
                            Id = new Guid("c389974a-d01b-4654-8140-271b5faada06"),
                            EducationId = new Guid("044cebd7-281b-4125-9122-8f8b008d519d"),
                            InstitutionId = new Guid("a14c2809-777d-4423-a1dd-0028f68065c0")
                        },
                        new
                        {
                            Id = new Guid("260b4008-3ec5-4595-ac9d-28cdc5edbd43"),
                            EducationId = new Guid("fc38c983-80f2-4f8e-8549-03a129618d20"),
                            InstitutionId = new Guid("a14c2809-777d-4423-a1dd-0028f68065c0")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("LecturesData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6845082a-cc42-466c-82b7-f98f5f12a512"),
                            Name = "Проектирование и дизайн информационных систем",
                            SemesterId = new Guid("16e07640-3e7c-4670-bec8-0e74298e53b9")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationDirectionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationDirectionId");

                    b.ToTable("Cources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0abc8fa6-9cf7-47d4-b37f-67d592816c4c"),
                            EducationDirectionId = new Guid("251ce3e0-c57b-4366-88b2-e2f59c78bcff"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("df748829-6c5e-403c-8fa6-aeb9ace42ade"),
                            EducationDirectionId = new Guid("251ce3e0-c57b-4366-88b2-e2f59c78bcff"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("076d4b72-6a32-4c6a-86b2-196bb9928684"),
                            EducationDirectionId = new Guid("251ce3e0-c57b-4366-88b2-e2f59c78bcff"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("25be2015-83fd-48cf-998e-a5e52d40a898"),
                            EducationDirectionId = new Guid("251ce3e0-c57b-4366-88b2-e2f59c78bcff"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("884296c9-3384-48e6-b470-88bc5bb9e1d2"),
                            EducationDirectionId = new Guid("0c158744-3d02-4b84-b384-d0e90532dce8"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("5385ad07-1484-468e-a29b-7286e4f83699"),
                            EducationDirectionId = new Guid("0c158744-3d02-4b84-b384-d0e90532dce8"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("7b542ff7-7bbb-4b5c-ba28-55964a284287"),
                            EducationDirectionId = new Guid("0c158744-3d02-4b84-b384-d0e90532dce8"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("3c48b7cf-bf44-454c-b1a8-5ee58d8126ea"),
                            EducationDirectionId = new Guid("0c158744-3d02-4b84-b384-d0e90532dce8"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("1fbe9a06-f817-4a18-aa60-cfc623557870"),
                            EducationDirectionId = new Guid("276cf8e0-9076-4557-b094-d6eb21ffe69e"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("ba5e974b-f9af-4dec-a042-a55d7b9fde5a"),
                            EducationDirectionId = new Guid("276cf8e0-9076-4557-b094-d6eb21ffe69e"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21502598-9d34-45a6-8374-b0dfab91583f"),
                            CourceId = new Guid("0abc8fa6-9cf7-47d4-b37f-67d592816c4c"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("c82955e5-23e3-48ce-910a-8261f1c26eae"),
                            CourceId = new Guid("0abc8fa6-9cf7-47d4-b37f-67d592816c4c"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("16e07640-3e7c-4670-bec8-0e74298e53b9"),
                            CourceId = new Guid("df748829-6c5e-403c-8fa6-aeb9ace42ade"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("6c46ca1f-bf53-4b18-9338-c01d3719cf78"),
                            CourceId = new Guid("df748829-6c5e-403c-8fa6-aeb9ace42ade"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("ff78d5cc-ae6c-469d-971e-e4653ed4b0c3"),
                            CourceId = new Guid("076d4b72-6a32-4c6a-86b2-196bb9928684"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("a2cf60a5-f297-45f4-82a0-be33c122b3cc"),
                            CourceId = new Guid("076d4b72-6a32-4c6a-86b2-196bb9928684"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("fe57d8b1-e4be-4718-b9db-76a74de311c6"),
                            CourceId = new Guid("25be2015-83fd-48cf-998e-a5e52d40a898"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("f9ef0c00-3900-4e42-87db-e5df9341bb68"),
                            CourceId = new Guid("25be2015-83fd-48cf-998e-a5e52d40a898"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("867eb6ac-c3b6-4d54-80a6-bafd8c7b14e6"),
                            CourceId = new Guid("884296c9-3384-48e6-b470-88bc5bb9e1d2"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("0f681d4a-1b45-4512-81ae-2e6a558b7152"),
                            CourceId = new Guid("884296c9-3384-48e6-b470-88bc5bb9e1d2"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a47c81b4-1f60-4c4c-8982-850e98d7b9fd"),
                            CourceId = new Guid("5385ad07-1484-468e-a29b-7286e4f83699"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("28a2bc22-0329-4037-acc5-e98b3277ff39"),
                            CourceId = new Guid("5385ad07-1484-468e-a29b-7286e4f83699"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("7f9bdee2-c708-49af-9394-bc06469e386f"),
                            CourceId = new Guid("7b542ff7-7bbb-4b5c-ba28-55964a284287"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("23e36c2b-0fcb-4a43-b8e0-5b3b5025da75"),
                            CourceId = new Guid("7b542ff7-7bbb-4b5c-ba28-55964a284287"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("87f2077a-4bf4-45b7-a1c7-3afbbd9794ec"),
                            CourceId = new Guid("3c48b7cf-bf44-454c-b1a8-5ee58d8126ea"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("3e9a1798-dd23-4f7b-a6f8-228d6b41c969"),
                            CourceId = new Guid("3c48b7cf-bf44-454c-b1a8-5ee58d8126ea"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a9dc4afe-14df-4718-8b51-dc8be277efab"),
                            CourceId = new Guid("1fbe9a06-f817-4a18-aa60-cfc623557870"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("e1fc078d-e074-4d59-ad6a-e876ee97a1e5"),
                            CourceId = new Guid("1fbe9a06-f817-4a18-aa60-cfc623557870"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("22808477-4703-4755-824a-62678b8949da"),
                            CourceId = new Guid("ba5e974b-f9af-4dec-a042-a55d7b9fde5a"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("fcf3ad5d-f143-4280-8314-32588a90337e"),
                            CourceId = new Guid("ba5e974b-f9af-4dec-a042-a55d7b9fde5a"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.InstitutionAndEducation", "InstitutionAndEducation")
                        .WithMany("Directions")
                        .HasForeignKey("InstitutionAndEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.LectureData", "LectureData")
                        .WithMany("File")
                        .HasForeignKey("LectureDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Education", "Education")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.Institution", "Institution")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Lecture", "Lecture")
                        .WithMany("Files")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.User", "User")
                        .WithMany("LectureFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.EducationDirection", "EducationDirection")
                        .WithMany("Cources")
                        .HasForeignKey("EducationDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationDirection");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Cource", "Cource")
                        .WithMany("Semesters")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Navigation("Cources");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Navigation("LectureFiles");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
