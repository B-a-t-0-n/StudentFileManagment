// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentFileManagement.Infrastructure;

#nullable disable

namespace StudentFileManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241122032144_Aaa2")]
    partial class Aaa2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4522c28e-14c4-4b30-a977-216851c83931"),
                            Name = "СПО"
                        },
                        new
                        {
                            Id = new Guid("dc53de74-366d-49b3-b931-2ebc0661a050"),
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = new Guid("d32b6309-87ef-4c5a-bd2a-8e4ea6976d8e"),
                            Name = "Магистратура"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionAndEducationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionAndEducationId");

                    b.ToTable("EducationDirections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75bc3e41-baf5-431a-93f9-7b624dceda44"),
                            InstitutionAndEducationId = new Guid("fb6c59c9-e801-407a-811d-de0e46e3ed43"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("4e6e4bb6-0c77-4062-9608-c7fae54092a2"),
                            InstitutionAndEducationId = new Guid("c8fa1238-cb3e-47d9-8c77-3a8f08ab8e2b"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("e988d82f-e651-44dc-895d-d9edaed12a86"),
                            InstitutionAndEducationId = new Guid("3318a0f2-d00e-42f8-8306-d73093028e27"),
                            Name = "Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LectureDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectureDataId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e93635a6-1fc0-49ad-919a-1ece65082e2e"),
                            Name = "ВГЛТУ"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionAndEducations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb6c59c9-e801-407a-811d-de0e46e3ed43"),
                            EducationId = new Guid("4522c28e-14c4-4b30-a977-216851c83931"),
                            InstitutionId = new Guid("e93635a6-1fc0-49ad-919a-1ece65082e2e")
                        },
                        new
                        {
                            Id = new Guid("c8fa1238-cb3e-47d9-8c77-3a8f08ab8e2b"),
                            EducationId = new Guid("dc53de74-366d-49b3-b931-2ebc0661a050"),
                            InstitutionId = new Guid("e93635a6-1fc0-49ad-919a-1ece65082e2e")
                        },
                        new
                        {
                            Id = new Guid("3318a0f2-d00e-42f8-8306-d73093028e27"),
                            EducationId = new Guid("d32b6309-87ef-4c5a-bd2a-8e4ea6976d8e"),
                            InstitutionId = new Guid("e93635a6-1fc0-49ad-919a-1ece65082e2e")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("LecturesData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8aa72d8-738c-47c6-9fd1-c48b02a8d586"),
                            Name = "Проектирование и дизайн информационных систем",
                            SemesterId = new Guid("11d654eb-9b5d-4306-a943-47bdce930037")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationDirectionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationDirectionId");

                    b.ToTable("Cources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e149fc88-fb37-419b-a859-9b1e520165ae"),
                            EducationDirectionId = new Guid("75bc3e41-baf5-431a-93f9-7b624dceda44"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("d6fa4a2d-c30c-42c2-a3f0-934041a02fa9"),
                            EducationDirectionId = new Guid("75bc3e41-baf5-431a-93f9-7b624dceda44"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("fe34a4b7-7cdc-46a7-91ba-59d3b0c13427"),
                            EducationDirectionId = new Guid("75bc3e41-baf5-431a-93f9-7b624dceda44"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("eb4689fc-8497-4f02-ab68-ae0b6fc93738"),
                            EducationDirectionId = new Guid("75bc3e41-baf5-431a-93f9-7b624dceda44"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("d450f6f4-5bab-499f-a111-a376fad406e3"),
                            EducationDirectionId = new Guid("4e6e4bb6-0c77-4062-9608-c7fae54092a2"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("edcc98af-c10c-4e0e-ad68-3e14f00ffba9"),
                            EducationDirectionId = new Guid("4e6e4bb6-0c77-4062-9608-c7fae54092a2"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("1f07b9e0-f800-4d8b-a1cb-b02732b68bae"),
                            EducationDirectionId = new Guid("4e6e4bb6-0c77-4062-9608-c7fae54092a2"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("cfb0261e-d827-4f6e-8c64-fd251d2bf79b"),
                            EducationDirectionId = new Guid("4e6e4bb6-0c77-4062-9608-c7fae54092a2"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("d34c7208-9cc3-4dd9-860c-de5c472c4f93"),
                            EducationDirectionId = new Guid("e988d82f-e651-44dc-895d-d9edaed12a86"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("5eda3bd3-b1f1-4edb-9453-4fff11df7617"),
                            EducationDirectionId = new Guid("e988d82f-e651-44dc-895d-d9edaed12a86"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("da1947c5-f0a8-46f9-ae52-3b2ec892f795"),
                            CourceId = new Guid("e149fc88-fb37-419b-a859-9b1e520165ae"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("5e6ce3d8-f3db-4628-93f5-608339dd059c"),
                            CourceId = new Guid("e149fc88-fb37-419b-a859-9b1e520165ae"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("11d654eb-9b5d-4306-a943-47bdce930037"),
                            CourceId = new Guid("d6fa4a2d-c30c-42c2-a3f0-934041a02fa9"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("5e2d855a-2c91-40b7-bc32-28ce152413ab"),
                            CourceId = new Guid("d6fa4a2d-c30c-42c2-a3f0-934041a02fa9"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("1925dd62-44a2-4a27-b839-7e5d0d3dfb67"),
                            CourceId = new Guid("fe34a4b7-7cdc-46a7-91ba-59d3b0c13427"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("97e2d592-ceef-419b-af15-a509a775a858"),
                            CourceId = new Guid("fe34a4b7-7cdc-46a7-91ba-59d3b0c13427"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("0c1ae663-8ec3-4d4a-84e6-49c2ed69442f"),
                            CourceId = new Guid("eb4689fc-8497-4f02-ab68-ae0b6fc93738"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("25b5ebf6-1943-42d1-9e2f-95513b69ad8e"),
                            CourceId = new Guid("eb4689fc-8497-4f02-ab68-ae0b6fc93738"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("4b9f5382-c8d7-4cf2-990e-ec744f588e42"),
                            CourceId = new Guid("d450f6f4-5bab-499f-a111-a376fad406e3"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("bb9408e2-cdd4-4dbe-9430-c806fdd1f1b7"),
                            CourceId = new Guid("d450f6f4-5bab-499f-a111-a376fad406e3"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("67f2ba2b-c62c-4ee1-a46f-3b085c01ec93"),
                            CourceId = new Guid("edcc98af-c10c-4e0e-ad68-3e14f00ffba9"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("38c96775-3563-4115-b14e-6a8e8f7ea33b"),
                            CourceId = new Guid("edcc98af-c10c-4e0e-ad68-3e14f00ffba9"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a05d7b1b-3c08-4cbb-9b87-5b30a9988e36"),
                            CourceId = new Guid("1f07b9e0-f800-4d8b-a1cb-b02732b68bae"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("5987f1b6-c471-46a7-8a37-5e8dbe651675"),
                            CourceId = new Guid("1f07b9e0-f800-4d8b-a1cb-b02732b68bae"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("3edb59fc-a2c5-4a0e-8f2e-483e4b5522b6"),
                            CourceId = new Guid("cfb0261e-d827-4f6e-8c64-fd251d2bf79b"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("11e05565-0801-4731-94f3-1eb56eec066b"),
                            CourceId = new Guid("cfb0261e-d827-4f6e-8c64-fd251d2bf79b"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("d3a94cea-8e41-45a1-8255-ab31d27c3b46"),
                            CourceId = new Guid("d34c7208-9cc3-4dd9-860c-de5c472c4f93"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("7d2bca41-ea57-4666-a789-9ce6976106c2"),
                            CourceId = new Guid("d34c7208-9cc3-4dd9-860c-de5c472c4f93"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("048fc602-06bd-4546-83fe-ac2dfd03bd06"),
                            CourceId = new Guid("5eda3bd3-b1f1-4edb-9453-4fff11df7617"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("b6bc29cc-b782-4aab-9402-344ec9ce599d"),
                            CourceId = new Guid("5eda3bd3-b1f1-4edb-9453-4fff11df7617"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.InstitutionAndEducation", "InstitutionAndEducation")
                        .WithMany("Directions")
                        .HasForeignKey("InstitutionAndEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.LectureData", "LectureData")
                        .WithMany("File")
                        .HasForeignKey("LectureDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Education", "Education")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.Institution", "Institution")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Lecture", "Lecture")
                        .WithMany("Files")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.User", "User")
                        .WithMany("LectureFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.EducationDirection", "EducationDirection")
                        .WithMany("Cources")
                        .HasForeignKey("EducationDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationDirection");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Cource", "Cource")
                        .WithMany("Semesters")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Navigation("Cources");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Navigation("LectureFiles");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
