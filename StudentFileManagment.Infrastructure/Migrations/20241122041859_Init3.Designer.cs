// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentFileManagement.Infrastructure;

#nullable disable

namespace StudentFileManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241122041859_Init3")]
    partial class Init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce11accd-17a8-4958-a9cc-09ba0c4ce16d"),
                            Name = "СПО"
                        },
                        new
                        {
                            Id = new Guid("62ac135b-e831-4995-88ac-9ae15da30140"),
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = new Guid("8d5e99cc-d8cf-422f-8a9c-cbacd5143b27"),
                            Name = "Магистратура"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionAndEducationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionAndEducationId");

                    b.ToTable("EducationDirections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c4b78e2-1f97-4910-8310-5c24eb694978"),
                            InstitutionAndEducationId = new Guid("4a4fc8a9-0d57-4ee3-b27a-3a692d9ca597"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("8c3ee3f6-ecd0-49c5-aff8-9886b8e6bce9"),
                            InstitutionAndEducationId = new Guid("1765e7d2-4623-481e-b6d0-b4f1184e29f1"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("dc3abb4d-8790-4160-9b50-16f9623e5529"),
                            InstitutionAndEducationId = new Guid("c1ee94c4-4ca5-4933-b5cf-1713c8572d2f"),
                            Name = "Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LectureDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectureDataId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ec08d6f-f5c7-4628-9ad7-136fd30c2e96"),
                            Name = "ВГЛТУ"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionAndEducations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a4fc8a9-0d57-4ee3-b27a-3a692d9ca597"),
                            EducationId = new Guid("ce11accd-17a8-4958-a9cc-09ba0c4ce16d"),
                            InstitutionId = new Guid("9ec08d6f-f5c7-4628-9ad7-136fd30c2e96")
                        },
                        new
                        {
                            Id = new Guid("1765e7d2-4623-481e-b6d0-b4f1184e29f1"),
                            EducationId = new Guid("62ac135b-e831-4995-88ac-9ae15da30140"),
                            InstitutionId = new Guid("9ec08d6f-f5c7-4628-9ad7-136fd30c2e96")
                        },
                        new
                        {
                            Id = new Guid("c1ee94c4-4ca5-4933-b5cf-1713c8572d2f"),
                            EducationId = new Guid("8d5e99cc-d8cf-422f-8a9c-cbacd5143b27"),
                            InstitutionId = new Guid("9ec08d6f-f5c7-4628-9ad7-136fd30c2e96")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("LecturesData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("45fe859a-38d6-495d-9e05-e641ad47ffe5"),
                            Name = "Проектирование и дизайн информационных систем",
                            SemesterId = new Guid("ccbc572e-dc54-4e5a-bdb1-02d39a595ce8")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationDirectionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationDirectionId");

                    b.ToTable("Cources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63046d20-a0a7-4443-b18e-887456d59699"),
                            EducationDirectionId = new Guid("4c4b78e2-1f97-4910-8310-5c24eb694978"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("973ace7b-94a9-4c17-a6a8-0aab022338a0"),
                            EducationDirectionId = new Guid("4c4b78e2-1f97-4910-8310-5c24eb694978"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("393522d4-6a4e-4c5d-aea2-ae9b6b26cb7e"),
                            EducationDirectionId = new Guid("4c4b78e2-1f97-4910-8310-5c24eb694978"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("ff9181ff-b7d2-4780-8cf5-0a73342d90b9"),
                            EducationDirectionId = new Guid("4c4b78e2-1f97-4910-8310-5c24eb694978"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("53ac5424-846c-449d-93f9-a0d40d317b25"),
                            EducationDirectionId = new Guid("8c3ee3f6-ecd0-49c5-aff8-9886b8e6bce9"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("eb5808ea-498f-4ae6-888c-b89be7ed51f8"),
                            EducationDirectionId = new Guid("8c3ee3f6-ecd0-49c5-aff8-9886b8e6bce9"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("316ca0c9-cdcf-4d11-b60b-a36ad92c4b03"),
                            EducationDirectionId = new Guid("8c3ee3f6-ecd0-49c5-aff8-9886b8e6bce9"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("f87a4d36-a4aa-4851-8ca0-86a952eb02e9"),
                            EducationDirectionId = new Guid("8c3ee3f6-ecd0-49c5-aff8-9886b8e6bce9"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("81e63f6c-e16e-49ba-9d78-c2e5b53ea679"),
                            EducationDirectionId = new Guid("dc3abb4d-8790-4160-9b50-16f9623e5529"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("837621a6-e9d0-4885-b7ba-5bf105438826"),
                            EducationDirectionId = new Guid("dc3abb4d-8790-4160-9b50-16f9623e5529"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bcb9e948-82ee-4958-95a2-423bd6413679"),
                            CourceId = new Guid("63046d20-a0a7-4443-b18e-887456d59699"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("e996bba8-2a93-4867-b741-ba233352ddce"),
                            CourceId = new Guid("63046d20-a0a7-4443-b18e-887456d59699"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("ccbc572e-dc54-4e5a-bdb1-02d39a595ce8"),
                            CourceId = new Guid("973ace7b-94a9-4c17-a6a8-0aab022338a0"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("de81a93c-715f-4660-bd5d-27590486eceb"),
                            CourceId = new Guid("973ace7b-94a9-4c17-a6a8-0aab022338a0"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("262f0bb4-6d24-401a-885a-bdedeaf2f48e"),
                            CourceId = new Guid("393522d4-6a4e-4c5d-aea2-ae9b6b26cb7e"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("f6b2fc48-d121-4dcb-9d5c-cbc15a795a0d"),
                            CourceId = new Guid("393522d4-6a4e-4c5d-aea2-ae9b6b26cb7e"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a02c2dfe-aae5-4617-a5ad-e076d47cd277"),
                            CourceId = new Guid("ff9181ff-b7d2-4780-8cf5-0a73342d90b9"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("59c9f30b-5a43-4e55-8716-7d456b9026cf"),
                            CourceId = new Guid("ff9181ff-b7d2-4780-8cf5-0a73342d90b9"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("bd4276a8-832d-4bea-b09c-52a9d5b83fe4"),
                            CourceId = new Guid("53ac5424-846c-449d-93f9-a0d40d317b25"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("06b92f4a-202d-43a3-a355-b8d5fcecf698"),
                            CourceId = new Guid("53ac5424-846c-449d-93f9-a0d40d317b25"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("0b46a346-3f80-4c3f-adea-dc518540d8c7"),
                            CourceId = new Guid("eb5808ea-498f-4ae6-888c-b89be7ed51f8"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("f44f0f7a-e1fb-4368-a555-912966479d11"),
                            CourceId = new Guid("eb5808ea-498f-4ae6-888c-b89be7ed51f8"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("3bdab25b-176b-42c5-b128-4f84167ebd8f"),
                            CourceId = new Guid("316ca0c9-cdcf-4d11-b60b-a36ad92c4b03"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("4cc7fd87-039a-47a4-95d6-aaff1eedab2b"),
                            CourceId = new Guid("316ca0c9-cdcf-4d11-b60b-a36ad92c4b03"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("10778700-63a6-4d01-9332-7219208121cf"),
                            CourceId = new Guid("f87a4d36-a4aa-4851-8ca0-86a952eb02e9"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("dd4e434d-fdc4-4b20-b64c-4a8f661a5081"),
                            CourceId = new Guid("f87a4d36-a4aa-4851-8ca0-86a952eb02e9"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("b398958b-6fda-4cf5-8282-96e26afa3e07"),
                            CourceId = new Guid("81e63f6c-e16e-49ba-9d78-c2e5b53ea679"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("5da4a2de-646b-4597-bdbe-f2107f7971f8"),
                            CourceId = new Guid("81e63f6c-e16e-49ba-9d78-c2e5b53ea679"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("4fc9a709-b3b4-4ecd-9ed2-65b5e1b1b627"),
                            CourceId = new Guid("837621a6-e9d0-4885-b7ba-5bf105438826"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("c674182b-0fc0-4829-88d1-febf771e3a03"),
                            CourceId = new Guid("837621a6-e9d0-4885-b7ba-5bf105438826"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.InstitutionAndEducation", "InstitutionAndEducation")
                        .WithMany("Directions")
                        .HasForeignKey("InstitutionAndEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.LectureData", "LectureData")
                        .WithMany("File")
                        .HasForeignKey("LectureDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Education", "Education")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.Institution", "Institution")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Lecture", "Lecture")
                        .WithMany("Files")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.User", "User")
                        .WithMany("LectureFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.EducationDirection", "EducationDirection")
                        .WithMany("Cources")
                        .HasForeignKey("EducationDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationDirection");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Cource", "Cource")
                        .WithMany("Semesters")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Navigation("Cources");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Navigation("LectureFiles");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
