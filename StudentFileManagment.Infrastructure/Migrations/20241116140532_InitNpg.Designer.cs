// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentFileManagement.Infrastructure;

#nullable disable

namespace StudentFileManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241116140532_InitNpg")]
    partial class InitNpg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9440dadc-0b8e-405f-9d30-9b96b17ab15a"),
                            Name = "СПО"
                        },
                        new
                        {
                            Id = new Guid("fca48a59-2033-43fa-ae7d-b22aeb63851d"),
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = new Guid("57887b64-e853-4999-99b8-3d463dfc41f6"),
                            Name = "Магистратура"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionAndEducationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionAndEducationId");

                    b.ToTable("EducationDirections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("602c02ae-725b-479e-9667-35c0c0d71384"),
                            InstitutionAndEducationId = new Guid("8c46491a-e296-470f-9265-2c38c34f44ab"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("99eab9be-de2e-4b03-ace1-e6e644102578"),
                            InstitutionAndEducationId = new Guid("ee899545-b050-4ecd-bdd6-4aa25b0d3116"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("1282b2ab-45df-4820-9600-5d31a6950d0f"),
                            InstitutionAndEducationId = new Guid("20e2cbea-95ba-48e1-ae75-6096d5cc3f72"),
                            Name = "Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LectureDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectureDataId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e21af2c-01cb-475e-a487-23083064353d"),
                            Name = "ВГЛТУ"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionAndEducations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c46491a-e296-470f-9265-2c38c34f44ab"),
                            EducationId = new Guid("9440dadc-0b8e-405f-9d30-9b96b17ab15a"),
                            InstitutionId = new Guid("5e21af2c-01cb-475e-a487-23083064353d")
                        },
                        new
                        {
                            Id = new Guid("ee899545-b050-4ecd-bdd6-4aa25b0d3116"),
                            EducationId = new Guid("fca48a59-2033-43fa-ae7d-b22aeb63851d"),
                            InstitutionId = new Guid("5e21af2c-01cb-475e-a487-23083064353d")
                        },
                        new
                        {
                            Id = new Guid("20e2cbea-95ba-48e1-ae75-6096d5cc3f72"),
                            EducationId = new Guid("57887b64-e853-4999-99b8-3d463dfc41f6"),
                            InstitutionId = new Guid("5e21af2c-01cb-475e-a487-23083064353d")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("LecturesData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17bda0f9-e109-43ef-9157-e2fcabfb741b"),
                            Name = "Проектирование и дизайн информационных систем",
                            SemesterId = new Guid("a1c92cd1-df66-4024-9ed0-033c5d3b49ee")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationDirectionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationDirectionId");

                    b.ToTable("Cources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d97a028d-d3f3-43a5-98b1-06e0f5cf4ca5"),
                            EducationDirectionId = new Guid("602c02ae-725b-479e-9667-35c0c0d71384"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("4a9ffe2f-eed7-48c4-abcf-2a6a56063b4e"),
                            EducationDirectionId = new Guid("602c02ae-725b-479e-9667-35c0c0d71384"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("3f630e70-6bdf-4da0-980b-3645009cb7c7"),
                            EducationDirectionId = new Guid("602c02ae-725b-479e-9667-35c0c0d71384"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("e2597d08-fd61-44d0-9fe3-dfafc9ed1462"),
                            EducationDirectionId = new Guid("602c02ae-725b-479e-9667-35c0c0d71384"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("5367ef55-a173-489e-82c0-840aa3d56ed0"),
                            EducationDirectionId = new Guid("99eab9be-de2e-4b03-ace1-e6e644102578"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("fb154af1-7230-4caf-99b8-7c597cf8fe74"),
                            EducationDirectionId = new Guid("99eab9be-de2e-4b03-ace1-e6e644102578"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("60db9a82-a8e0-4114-812a-a12a75336eb1"),
                            EducationDirectionId = new Guid("99eab9be-de2e-4b03-ace1-e6e644102578"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("25eb8274-13a4-4e19-9446-d903e2c9a0c4"),
                            EducationDirectionId = new Guid("99eab9be-de2e-4b03-ace1-e6e644102578"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("5c117bc6-912d-4fd0-881d-5ec5ce666083"),
                            EducationDirectionId = new Guid("1282b2ab-45df-4820-9600-5d31a6950d0f"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("1f59417a-37c8-46a6-99d2-e54af9144193"),
                            EducationDirectionId = new Guid("1282b2ab-45df-4820-9600-5d31a6950d0f"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88d67125-447d-4ece-b6bf-cfc35c322c6a"),
                            CourceId = new Guid("d97a028d-d3f3-43a5-98b1-06e0f5cf4ca5"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("aee70948-d546-4475-8d2a-fb4edf1c259a"),
                            CourceId = new Guid("d97a028d-d3f3-43a5-98b1-06e0f5cf4ca5"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a1c92cd1-df66-4024-9ed0-033c5d3b49ee"),
                            CourceId = new Guid("4a9ffe2f-eed7-48c4-abcf-2a6a56063b4e"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("3b92f388-ec22-4503-a331-7872cd88d677"),
                            CourceId = new Guid("4a9ffe2f-eed7-48c4-abcf-2a6a56063b4e"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("37fb6708-f002-4b24-81ef-a423f441a22e"),
                            CourceId = new Guid("3f630e70-6bdf-4da0-980b-3645009cb7c7"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("7470b8a7-5369-441d-b84e-08b0c2508113"),
                            CourceId = new Guid("3f630e70-6bdf-4da0-980b-3645009cb7c7"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("d1aed08c-dea4-4564-8682-a95b15f850e8"),
                            CourceId = new Guid("e2597d08-fd61-44d0-9fe3-dfafc9ed1462"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("ab1237fd-44b3-4e79-89f7-1602440d5667"),
                            CourceId = new Guid("e2597d08-fd61-44d0-9fe3-dfafc9ed1462"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("c89bb612-3643-451c-b2bc-892d7b98c7fe"),
                            CourceId = new Guid("5367ef55-a173-489e-82c0-840aa3d56ed0"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("f8708152-cfe8-403c-8158-deb62ad3d5f8"),
                            CourceId = new Guid("5367ef55-a173-489e-82c0-840aa3d56ed0"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("4f3cf312-fad2-4b6b-ab6d-2a3c59318983"),
                            CourceId = new Guid("fb154af1-7230-4caf-99b8-7c597cf8fe74"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("8ad2a130-cc52-478f-a454-e6bdf29d3e7d"),
                            CourceId = new Guid("fb154af1-7230-4caf-99b8-7c597cf8fe74"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("6efdb899-7c4c-45b2-b970-52d1effc24e5"),
                            CourceId = new Guid("60db9a82-a8e0-4114-812a-a12a75336eb1"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("2aec6b9f-c3c2-4871-954e-4b1f3b31a029"),
                            CourceId = new Guid("60db9a82-a8e0-4114-812a-a12a75336eb1"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("242f1d10-ee25-4ce0-9857-5a2fa225f32b"),
                            CourceId = new Guid("25eb8274-13a4-4e19-9446-d903e2c9a0c4"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("52276e5f-98ef-45d7-a75e-2aa76a025eaf"),
                            CourceId = new Guid("25eb8274-13a4-4e19-9446-d903e2c9a0c4"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("67f74fd7-5ae4-428a-84fc-b3dd90140ea9"),
                            CourceId = new Guid("5c117bc6-912d-4fd0-881d-5ec5ce666083"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("9dd87b67-13a9-4c21-843d-0d2e88ca6c7f"),
                            CourceId = new Guid("5c117bc6-912d-4fd0-881d-5ec5ce666083"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("8c4895c7-41e3-4df8-8a3e-c73a919c4d71"),
                            CourceId = new Guid("1f59417a-37c8-46a6-99d2-e54af9144193"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("430d8369-41ec-4947-8ea0-f179becb5eed"),
                            CourceId = new Guid("1f59417a-37c8-46a6-99d2-e54af9144193"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.InstitutionAndEducation", "InstitutionAndEducation")
                        .WithMany("Directions")
                        .HasForeignKey("InstitutionAndEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.LectureData", "LectureData")
                        .WithMany("File")
                        .HasForeignKey("LectureDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Education", "Education")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.Institution", "Institution")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Lecture", "Lecture")
                        .WithMany("Files")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.User", "User")
                        .WithMany("LectureFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.EducationDirection", "EducationDirection")
                        .WithMany("Cources")
                        .HasForeignKey("EducationDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationDirection");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Cource", "Cource")
                        .WithMany("Semesters")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Navigation("Cources");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Navigation("LectureFiles");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
