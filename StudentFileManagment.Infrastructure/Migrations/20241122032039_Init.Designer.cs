// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentFileManagement.Infrastructure;

#nullable disable

namespace StudentFileManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241122032039_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b651de1c-b745-4acf-ac8f-b0b2c9a38ce5"),
                            Name = "СПО"
                        },
                        new
                        {
                            Id = new Guid("ca75b47d-168c-48ae-97b1-1d64fbd279c1"),
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = new Guid("274f0879-81b2-48b9-8c83-563129a433b2"),
                            Name = "Магистратура"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionAndEducationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionAndEducationId");

                    b.ToTable("EducationDirections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc8dbf2f-e9c1-41dc-aedd-6fdfeec33997"),
                            InstitutionAndEducationId = new Guid("ebe01add-2ac1-43b4-8957-8e7e95726871"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("0e15eb64-d669-4c14-b5e0-2e2e952c6520"),
                            InstitutionAndEducationId = new Guid("b1ab7cf2-e1e1-4e96-869c-f96b93c05534"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("c20ec013-6c94-44d0-a290-ff5b3ddbe26e"),
                            InstitutionAndEducationId = new Guid("c6646a66-5158-44df-b3e0-597cb4b94732"),
                            Name = "Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LectureDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectureDataId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1258b06e-5775-4d50-b776-497a6056d3eb"),
                            Name = "ВГЛТУ"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionAndEducations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebe01add-2ac1-43b4-8957-8e7e95726871"),
                            EducationId = new Guid("b651de1c-b745-4acf-ac8f-b0b2c9a38ce5"),
                            InstitutionId = new Guid("1258b06e-5775-4d50-b776-497a6056d3eb")
                        },
                        new
                        {
                            Id = new Guid("b1ab7cf2-e1e1-4e96-869c-f96b93c05534"),
                            EducationId = new Guid("ca75b47d-168c-48ae-97b1-1d64fbd279c1"),
                            InstitutionId = new Guid("1258b06e-5775-4d50-b776-497a6056d3eb")
                        },
                        new
                        {
                            Id = new Guid("c6646a66-5158-44df-b3e0-597cb4b94732"),
                            EducationId = new Guid("274f0879-81b2-48b9-8c83-563129a433b2"),
                            InstitutionId = new Guid("1258b06e-5775-4d50-b776-497a6056d3eb")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("LecturesData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("466a4243-8a73-4536-a5df-0c55bea46eba"),
                            Name = "Проектирование и дизайн информационных систем",
                            SemesterId = new Guid("e25ee8b8-ef5a-423d-819c-cb7a5862a9ae")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationDirectionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationDirectionId");

                    b.ToTable("Cources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f47b622-69fc-4414-a710-325364ce4e4e"),
                            EducationDirectionId = new Guid("cc8dbf2f-e9c1-41dc-aedd-6fdfeec33997"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("89013fb3-ace7-4bd1-bca1-abee97e7e753"),
                            EducationDirectionId = new Guid("cc8dbf2f-e9c1-41dc-aedd-6fdfeec33997"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("3bec3d2f-4b29-490a-84a9-a104ba4219d9"),
                            EducationDirectionId = new Guid("cc8dbf2f-e9c1-41dc-aedd-6fdfeec33997"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("fdfc575f-377b-4f5b-98e5-aff7363b9800"),
                            EducationDirectionId = new Guid("cc8dbf2f-e9c1-41dc-aedd-6fdfeec33997"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("f7dc0e37-864d-4de0-b686-7cda0f64717f"),
                            EducationDirectionId = new Guid("0e15eb64-d669-4c14-b5e0-2e2e952c6520"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("c4fcc62f-ae61-41da-aded-db3ca03eb63f"),
                            EducationDirectionId = new Guid("0e15eb64-d669-4c14-b5e0-2e2e952c6520"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("18398daa-9149-429a-a761-e6c76eb65dd8"),
                            EducationDirectionId = new Guid("0e15eb64-d669-4c14-b5e0-2e2e952c6520"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("1e30bf01-c0ef-4c23-91ab-fd8ec9e461f2"),
                            EducationDirectionId = new Guid("0e15eb64-d669-4c14-b5e0-2e2e952c6520"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("aaacbb53-40a6-46b6-9557-be8c85a6354c"),
                            EducationDirectionId = new Guid("c20ec013-6c94-44d0-a290-ff5b3ddbe26e"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("f9f83d43-940b-4aba-ad57-8b3cd0044c51"),
                            EducationDirectionId = new Guid("c20ec013-6c94-44d0-a290-ff5b3ddbe26e"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("001e0d09-5a70-4f5d-bef5-155d5699fa72"),
                            CourceId = new Guid("9f47b622-69fc-4414-a710-325364ce4e4e"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("e0879f37-6590-4be4-8012-2eac2f62e64c"),
                            CourceId = new Guid("9f47b622-69fc-4414-a710-325364ce4e4e"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("e25ee8b8-ef5a-423d-819c-cb7a5862a9ae"),
                            CourceId = new Guid("89013fb3-ace7-4bd1-bca1-abee97e7e753"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("65d0f32a-01ce-4a1c-9591-3fe89f15c0dc"),
                            CourceId = new Guid("89013fb3-ace7-4bd1-bca1-abee97e7e753"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("149ca383-7e54-422d-966c-217f35198b67"),
                            CourceId = new Guid("3bec3d2f-4b29-490a-84a9-a104ba4219d9"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("16e34bd1-ed4b-418f-bcc4-d55d15508989"),
                            CourceId = new Guid("3bec3d2f-4b29-490a-84a9-a104ba4219d9"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("6e0fc074-6235-4b26-9f55-614495ad7701"),
                            CourceId = new Guid("fdfc575f-377b-4f5b-98e5-aff7363b9800"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("a7cf52c3-d18f-4c75-8f6f-857f36be1985"),
                            CourceId = new Guid("fdfc575f-377b-4f5b-98e5-aff7363b9800"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("51ba16df-e980-4ce3-8da0-a85f24b58f82"),
                            CourceId = new Guid("f7dc0e37-864d-4de0-b686-7cda0f64717f"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("81380f51-1feb-45ab-a94b-fba33eb7d47b"),
                            CourceId = new Guid("f7dc0e37-864d-4de0-b686-7cda0f64717f"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("1a51ccf0-4763-4317-afa2-0ebdb96ebe52"),
                            CourceId = new Guid("c4fcc62f-ae61-41da-aded-db3ca03eb63f"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("a9c22a4f-b126-48fb-913e-9d209eb79979"),
                            CourceId = new Guid("c4fcc62f-ae61-41da-aded-db3ca03eb63f"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("1d39b470-e65f-4901-856c-239c8703e55a"),
                            CourceId = new Guid("18398daa-9149-429a-a761-e6c76eb65dd8"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("82dbe600-3f09-4cda-b262-3d4a7891bd01"),
                            CourceId = new Guid("18398daa-9149-429a-a761-e6c76eb65dd8"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("177505d5-33a0-433a-8240-dbd8e5d34fce"),
                            CourceId = new Guid("1e30bf01-c0ef-4c23-91ab-fd8ec9e461f2"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("b1f89303-733e-4ffd-bba2-93f2591a4c61"),
                            CourceId = new Guid("1e30bf01-c0ef-4c23-91ab-fd8ec9e461f2"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("950628e0-e89d-4d41-9cee-819bf0f951f2"),
                            CourceId = new Guid("aaacbb53-40a6-46b6-9557-be8c85a6354c"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("784f28db-1c82-493b-97b0-eaf1373438eb"),
                            CourceId = new Guid("aaacbb53-40a6-46b6-9557-be8c85a6354c"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a0edf15d-da2c-4e46-bc00-99db87094634"),
                            CourceId = new Guid("f9f83d43-940b-4aba-ad57-8b3cd0044c51"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("01b2e251-7fd0-4072-a0ab-92d8bba89aea"),
                            CourceId = new Guid("f9f83d43-940b-4aba-ad57-8b3cd0044c51"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.InstitutionAndEducation", "InstitutionAndEducation")
                        .WithMany("Directions")
                        .HasForeignKey("InstitutionAndEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.LectureData", "LectureData")
                        .WithMany("File")
                        .HasForeignKey("LectureDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Education", "Education")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.Institution", "Institution")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Lecture", "Lecture")
                        .WithMany("Files")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.User", "User")
                        .WithMany("LectureFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.EducationDirection", "EducationDirection")
                        .WithMany("Cources")
                        .HasForeignKey("EducationDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationDirection");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Cource", "Cource")
                        .WithMany("Semesters")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Navigation("Cources");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Navigation("LectureFiles");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
