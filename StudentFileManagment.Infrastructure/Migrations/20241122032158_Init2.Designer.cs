// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentFileManagement.Infrastructure;

#nullable disable

namespace StudentFileManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241122032158_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42276573-6062-4e7f-89e8-a1c13962a46f"),
                            Name = "СПО"
                        },
                        new
                        {
                            Id = new Guid("341ea082-a120-4710-9815-9acb47f58ec6"),
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = new Guid("29da5a12-b661-4ddd-841f-42ca9e487c41"),
                            Name = "Магистратура"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionAndEducationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionAndEducationId");

                    b.ToTable("EducationDirections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e33851d-9298-48ab-a5f4-16426b69ff99"),
                            InstitutionAndEducationId = new Guid("dffa7668-2ec2-41d0-9d17-99c63980dcd3"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("2b2d68f8-d5ff-4643-8479-ce2c4cb6665d"),
                            InstitutionAndEducationId = new Guid("967abed4-8bda-49b0-b41f-e8413f445ee9"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("018cf2c7-646d-47bc-a6b7-43d74d738876"),
                            InstitutionAndEducationId = new Guid("b0735c1f-b9d3-4075-8d4c-ff28a955bf50"),
                            Name = "Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LectureDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectureDataId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65576c21-6e3e-4225-b63c-ac4d04b076bf"),
                            Name = "ВГЛТУ"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionAndEducations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dffa7668-2ec2-41d0-9d17-99c63980dcd3"),
                            EducationId = new Guid("42276573-6062-4e7f-89e8-a1c13962a46f"),
                            InstitutionId = new Guid("65576c21-6e3e-4225-b63c-ac4d04b076bf")
                        },
                        new
                        {
                            Id = new Guid("967abed4-8bda-49b0-b41f-e8413f445ee9"),
                            EducationId = new Guid("341ea082-a120-4710-9815-9acb47f58ec6"),
                            InstitutionId = new Guid("65576c21-6e3e-4225-b63c-ac4d04b076bf")
                        },
                        new
                        {
                            Id = new Guid("b0735c1f-b9d3-4075-8d4c-ff28a955bf50"),
                            EducationId = new Guid("29da5a12-b661-4ddd-841f-42ca9e487c41"),
                            InstitutionId = new Guid("65576c21-6e3e-4225-b63c-ac4d04b076bf")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("LecturesData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c55f50a-339e-40b9-9402-7ec483c94c10"),
                            Name = "Проектирование и дизайн информационных систем",
                            SemesterId = new Guid("77082d37-0412-48b6-82f4-4ad643c589b6")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationDirectionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationDirectionId");

                    b.ToTable("Cources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa6b9d42-79ec-4ced-9ef5-aed6caf5cec3"),
                            EducationDirectionId = new Guid("4e33851d-9298-48ab-a5f4-16426b69ff99"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("32ee008f-1573-490c-b1de-7f9fb00d31a1"),
                            EducationDirectionId = new Guid("4e33851d-9298-48ab-a5f4-16426b69ff99"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("341f7b16-7b23-42dc-bd28-6234ab3bc426"),
                            EducationDirectionId = new Guid("4e33851d-9298-48ab-a5f4-16426b69ff99"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("b8c8439d-57df-4870-a861-47938e9a75dd"),
                            EducationDirectionId = new Guid("4e33851d-9298-48ab-a5f4-16426b69ff99"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("d2978955-8014-4130-9a62-8c6c2c53c722"),
                            EducationDirectionId = new Guid("2b2d68f8-d5ff-4643-8479-ce2c4cb6665d"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("533ba51b-868e-4054-8ea8-a901287163b5"),
                            EducationDirectionId = new Guid("2b2d68f8-d5ff-4643-8479-ce2c4cb6665d"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("fe480e7a-00e9-4c3e-949f-d6f2041d62bd"),
                            EducationDirectionId = new Guid("2b2d68f8-d5ff-4643-8479-ce2c4cb6665d"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("7d4b6ca5-a7fd-49c6-a7a2-0006d101ad55"),
                            EducationDirectionId = new Guid("2b2d68f8-d5ff-4643-8479-ce2c4cb6665d"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("8e6ca696-f421-4f6b-838f-560fdf32414e"),
                            EducationDirectionId = new Guid("018cf2c7-646d-47bc-a6b7-43d74d738876"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("3120e7ce-ca53-4fc1-bf56-1552eb487837"),
                            EducationDirectionId = new Guid("018cf2c7-646d-47bc-a6b7-43d74d738876"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40cfc1b0-59bb-4215-9929-496adfbcf119"),
                            CourceId = new Guid("fa6b9d42-79ec-4ced-9ef5-aed6caf5cec3"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("b65cbb59-4623-4a32-a3b1-6eaf6c23aeff"),
                            CourceId = new Guid("fa6b9d42-79ec-4ced-9ef5-aed6caf5cec3"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("77082d37-0412-48b6-82f4-4ad643c589b6"),
                            CourceId = new Guid("32ee008f-1573-490c-b1de-7f9fb00d31a1"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("6344e587-f811-40cb-86d2-34d98078173e"),
                            CourceId = new Guid("32ee008f-1573-490c-b1de-7f9fb00d31a1"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("68cc9936-8b42-46e9-afaa-2c876ac7962d"),
                            CourceId = new Guid("341f7b16-7b23-42dc-bd28-6234ab3bc426"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("b555eae8-8fae-4ade-83a7-04e93c7dd557"),
                            CourceId = new Guid("341f7b16-7b23-42dc-bd28-6234ab3bc426"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("fd40017b-008e-478b-bb31-e6324f9237b2"),
                            CourceId = new Guid("b8c8439d-57df-4870-a861-47938e9a75dd"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("fa004cb7-3b3b-4e35-a9c2-fe534196db9d"),
                            CourceId = new Guid("b8c8439d-57df-4870-a861-47938e9a75dd"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("9713d17a-5c14-4901-b868-a9c5f705d19b"),
                            CourceId = new Guid("d2978955-8014-4130-9a62-8c6c2c53c722"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("0e0076d8-c9eb-483b-9568-40abe2180c9b"),
                            CourceId = new Guid("d2978955-8014-4130-9a62-8c6c2c53c722"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("f59dea25-3bcc-4bd8-bc1c-9dc3d1daf0e7"),
                            CourceId = new Guid("533ba51b-868e-4054-8ea8-a901287163b5"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("008f61ee-e39d-4f58-a671-c231aa12e6d0"),
                            CourceId = new Guid("533ba51b-868e-4054-8ea8-a901287163b5"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("f91a78e0-11a1-4878-8503-6f32c081f6a8"),
                            CourceId = new Guid("fe480e7a-00e9-4c3e-949f-d6f2041d62bd"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("58f2dd28-5b59-410e-a9e6-c6692f5b548d"),
                            CourceId = new Guid("fe480e7a-00e9-4c3e-949f-d6f2041d62bd"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("d6bca7b5-ad34-46cc-bc71-e6ee3ed7aa8c"),
                            CourceId = new Guid("7d4b6ca5-a7fd-49c6-a7a2-0006d101ad55"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("72427a9a-d194-4441-b8e4-82f6ad976237"),
                            CourceId = new Guid("7d4b6ca5-a7fd-49c6-a7a2-0006d101ad55"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("89d34d16-560c-4abd-93b3-97d918cc797f"),
                            CourceId = new Guid("8e6ca696-f421-4f6b-838f-560fdf32414e"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("42890e83-7634-4542-8a9d-0bb20f4c31e6"),
                            CourceId = new Guid("8e6ca696-f421-4f6b-838f-560fdf32414e"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("086ab7bb-387c-4bf9-b1ac-9b19ac3ba806"),
                            CourceId = new Guid("3120e7ce-ca53-4fc1-bf56-1552eb487837"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("99100956-2b7e-4a4e-942b-a1e477ad8482"),
                            CourceId = new Guid("3120e7ce-ca53-4fc1-bf56-1552eb487837"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.InstitutionAndEducation", "InstitutionAndEducation")
                        .WithMany("Directions")
                        .HasForeignKey("InstitutionAndEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.LectureData", "LectureData")
                        .WithMany("File")
                        .HasForeignKey("LectureDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Education", "Education")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.Institution", "Institution")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Lecture", "Lecture")
                        .WithMany("Files")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.User", "User")
                        .WithMany("LectureFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.EducationDirection", "EducationDirection")
                        .WithMany("Cources")
                        .HasForeignKey("EducationDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationDirection");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Cource", "Cource")
                        .WithMany("Semesters")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Navigation("Cources");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Navigation("LectureFiles");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
