// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentFileManagement.Infrastructure;

#nullable disable

namespace StudentFileManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241122041429_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("186e1b42-2d04-4861-ac6a-58c81516d11c"),
                            Name = "СПО"
                        },
                        new
                        {
                            Id = new Guid("299c3893-8410-474c-a474-e2632e5d71f7"),
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = new Guid("9b04d453-ddb5-464f-b14c-950514b95b64"),
                            Name = "Магистратура"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionAndEducationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionAndEducationId");

                    b.ToTable("EducationDirections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e0716c4-7e58-4b0f-9587-7527a1be9b60"),
                            InstitutionAndEducationId = new Guid("a517a396-1ff2-4e27-9687-abe765205448"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("e12769d9-482e-4e82-aaf5-1188bda2a018"),
                            InstitutionAndEducationId = new Guid("424b2026-d1ae-42d1-bc1b-71b572a1b197"),
                            Name = "Информационные системы и программирование"
                        },
                        new
                        {
                            Id = new Guid("0693f766-70d8-4ba2-b048-5fc91ba79eb1"),
                            InstitutionAndEducationId = new Guid("576d5746-fdc2-47a5-9a32-f70161f6f8aa"),
                            Name = "Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LectureDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectureDataId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2984d40a-7b27-4863-bd72-a55def5341f0"),
                            Name = "ВГЛТУ"
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionAndEducations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a517a396-1ff2-4e27-9687-abe765205448"),
                            EducationId = new Guid("186e1b42-2d04-4861-ac6a-58c81516d11c"),
                            InstitutionId = new Guid("2984d40a-7b27-4863-bd72-a55def5341f0")
                        },
                        new
                        {
                            Id = new Guid("424b2026-d1ae-42d1-bc1b-71b572a1b197"),
                            EducationId = new Guid("299c3893-8410-474c-a474-e2632e5d71f7"),
                            InstitutionId = new Guid("2984d40a-7b27-4863-bd72-a55def5341f0")
                        },
                        new
                        {
                            Id = new Guid("576d5746-fdc2-47a5-9a32-f70161f6f8aa"),
                            EducationId = new Guid("9b04d453-ddb5-464f-b14c-950514b95b64"),
                            InstitutionId = new Guid("2984d40a-7b27-4863-bd72-a55def5341f0")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("UserId");

                    b.ToTable("LecturesData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0381b59-ae17-432b-abfd-cf8837100e91"),
                            Name = "Проектирование и дизайн информационных систем",
                            SemesterId = new Guid("9a3f10eb-a7c9-4d51-90ec-ad213ccfe969")
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationDirectionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationDirectionId");

                    b.ToTable("Cources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f989096-0137-4948-ade8-8fccf143f482"),
                            EducationDirectionId = new Guid("5e0716c4-7e58-4b0f-9587-7527a1be9b60"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("8ae9dd08-68ac-4919-8a2d-e70158d71989"),
                            EducationDirectionId = new Guid("5e0716c4-7e58-4b0f-9587-7527a1be9b60"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("e90c0d77-6e23-4f45-a1d8-37c27c44a263"),
                            EducationDirectionId = new Guid("5e0716c4-7e58-4b0f-9587-7527a1be9b60"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("f035deef-036b-4121-8e7e-ceea31a5e79c"),
                            EducationDirectionId = new Guid("5e0716c4-7e58-4b0f-9587-7527a1be9b60"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("1137c747-cef6-4427-9df4-3770b341ff8e"),
                            EducationDirectionId = new Guid("e12769d9-482e-4e82-aaf5-1188bda2a018"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("76067cb0-6dde-4b41-9c1d-f5a0f404f339"),
                            EducationDirectionId = new Guid("e12769d9-482e-4e82-aaf5-1188bda2a018"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("71edbd03-980f-48c4-a524-ff551439cf09"),
                            EducationDirectionId = new Guid("e12769d9-482e-4e82-aaf5-1188bda2a018"),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("6cac5cab-7f5f-4723-a1bc-a1b71d4400db"),
                            EducationDirectionId = new Guid("e12769d9-482e-4e82-aaf5-1188bda2a018"),
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("05fcba21-0f9a-4ac5-abb9-439e61172f53"),
                            EducationDirectionId = new Guid("0693f766-70d8-4ba2-b048-5fc91ba79eb1"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("f59b5220-b594-4aff-84f1-abfc4e3a7f72"),
                            EducationDirectionId = new Guid("0693f766-70d8-4ba2-b048-5fc91ba79eb1"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db58df59-318b-42f3-a58e-300b8711a953"),
                            CourceId = new Guid("2f989096-0137-4948-ade8-8fccf143f482"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("b7042103-a763-41b6-82dc-af603e46e34a"),
                            CourceId = new Guid("2f989096-0137-4948-ade8-8fccf143f482"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("9a3f10eb-a7c9-4d51-90ec-ad213ccfe969"),
                            CourceId = new Guid("8ae9dd08-68ac-4919-8a2d-e70158d71989"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("e63ed2de-40fd-4c84-8401-7429ef8dac40"),
                            CourceId = new Guid("8ae9dd08-68ac-4919-8a2d-e70158d71989"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("cb1438dc-d378-453b-9bcb-f5eaf9d52461"),
                            CourceId = new Guid("e90c0d77-6e23-4f45-a1d8-37c27c44a263"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("89bf6756-35fe-465c-bc94-65859c8e0e2c"),
                            CourceId = new Guid("e90c0d77-6e23-4f45-a1d8-37c27c44a263"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("66522245-f2e7-4f1d-b923-1a5c3d50d5b6"),
                            CourceId = new Guid("f035deef-036b-4121-8e7e-ceea31a5e79c"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("9d3251e5-e7c9-4a67-915d-1ce8cc781264"),
                            CourceId = new Guid("f035deef-036b-4121-8e7e-ceea31a5e79c"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("b17bfb4a-9a9a-44b6-a31e-09026e119b9c"),
                            CourceId = new Guid("1137c747-cef6-4427-9df4-3770b341ff8e"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("78b457f0-4c73-49ab-8910-0a80f293c4cb"),
                            CourceId = new Guid("1137c747-cef6-4427-9df4-3770b341ff8e"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("3ca4887a-3e10-4a33-8b6b-c59cb951ced4"),
                            CourceId = new Guid("76067cb0-6dde-4b41-9c1d-f5a0f404f339"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("80cc7377-0064-4094-89ee-2b7d571deaf8"),
                            CourceId = new Guid("76067cb0-6dde-4b41-9c1d-f5a0f404f339"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("27b008d5-d7db-448b-90e7-a9bdd5342e96"),
                            CourceId = new Guid("71edbd03-980f-48c4-a524-ff551439cf09"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("f4ab845e-4944-412d-ada2-785644d73641"),
                            CourceId = new Guid("71edbd03-980f-48c4-a524-ff551439cf09"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("66acc2a8-bfac-4887-9eac-720b4ddff95d"),
                            CourceId = new Guid("6cac5cab-7f5f-4723-a1bc-a1b71d4400db"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("2ef7f185-e57e-4c42-a5ca-913710df2f40"),
                            CourceId = new Guid("6cac5cab-7f5f-4723-a1bc-a1b71d4400db"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("4b097680-fd2d-4b9f-85d9-335aef8af587"),
                            CourceId = new Guid("05fcba21-0f9a-4ac5-abb9-439e61172f53"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("653c85a7-09e6-49ce-b6e5-66186fccb2b7"),
                            CourceId = new Guid("05fcba21-0f9a-4ac5-abb9-439e61172f53"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("028631e4-df97-4571-8a89-e885bf66a064"),
                            CourceId = new Guid("f59b5220-b594-4aff-84f1-abfc4e3a7f72"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("0467e573-8e83-47db-ad97-d918b8f9ffce"),
                            CourceId = new Guid("f59b5220-b594-4aff-84f1-abfc4e3a7f72"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.InstitutionAndEducation", "InstitutionAndEducation")
                        .WithMany("Directions")
                        .HasForeignKey("InstitutionAndEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.File", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.LectureData", "LectureData")
                        .WithMany("File")
                        .HasForeignKey("LectureDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectureData");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Education", "Education")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.Institution", "Institution")
                        .WithMany("InstitutionAndEducation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.Lecture", "Lecture")
                        .WithMany("Files")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentFileManagement.Domain.User", "User")
                        .WithMany("LectureFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.HasOne("StudentFileManagement.Domain.EducationDirection", "EducationDirection")
                        .WithMany("Cources")
                        .HasForeignKey("EducationDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationDirection");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.HasOne("StudentFileManagment.Domain.Cource", "Cource")
                        .WithMany("Semesters")
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cource");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Education", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.EducationDirection", b =>
                {
                    b.Navigation("Cources");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Institution", b =>
                {
                    b.Navigation("InstitutionAndEducation");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.InstitutionAndEducation", b =>
                {
                    b.Navigation("Directions");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Lecture", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.LectureData", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.Subject", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("StudentFileManagement.Domain.User", b =>
                {
                    b.Navigation("LectureFiles");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Cource", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("StudentFileManagment.Domain.Semester", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
